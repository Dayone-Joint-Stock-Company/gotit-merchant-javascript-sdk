/**
 * Merchant APIs
 * Technical document APIs for Merchant APIs
 *
 * The version of the OpenAPI document: 6.0
 * Contact: duong.vu@gotit.vn
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ResponseCheckMultipleSchemaDataInnerRedemptionsRedeemSkuCodesInner from './ResponseCheckMultipleSchemaDataInnerRedemptionsRedeemSkuCodesInner';
import ResponseCheckMultipleSchemaDataInnerRedemptionsUsedStore from './ResponseCheckMultipleSchemaDataInnerRedemptionsUsedStore';

/**
 * The ResponseMarkUseMultipleSchemaDataInnerRedemptions model module.
 * @module model/ResponseMarkUseMultipleSchemaDataInnerRedemptions
 * @version 6.0
 */
class ResponseMarkUseMultipleSchemaDataInnerRedemptions {
    /**
     * Constructs a new <code>ResponseMarkUseMultipleSchemaDataInnerRedemptions</code>.
     * Include information related to the use of the voucher (all types)
     * @alias module:model/ResponseMarkUseMultipleSchemaDataInnerRedemptions
     */
    constructor() { 
        
        ResponseMarkUseMultipleSchemaDataInnerRedemptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResponseMarkUseMultipleSchemaDataInnerRedemptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResponseMarkUseMultipleSchemaDataInnerRedemptions} obj Optional instance to populate.
     * @return {module:model/ResponseMarkUseMultipleSchemaDataInnerRedemptions} The populated <code>ResponseMarkUseMultipleSchemaDataInnerRedemptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResponseMarkUseMultipleSchemaDataInnerRedemptions();

            if (data.hasOwnProperty('redeem_sku_codes')) {
                obj['redeem_sku_codes'] = ApiClient.convertToType(data['redeem_sku_codes'], [ResponseCheckMultipleSchemaDataInnerRedemptionsRedeemSkuCodesInner]);
            }
            if (data.hasOwnProperty('redemption_value')) {
                obj['redemption_value'] = ApiClient.convertToType(data['redemption_value'], 'Number');
            }
            if (data.hasOwnProperty('used_store')) {
                obj['used_store'] = ResponseCheckMultipleSchemaDataInnerRedemptionsUsedStore.constructFromObject(data['used_store']);
            }
            if (data.hasOwnProperty('used_date')) {
                obj['used_date'] = ApiClient.convertToType(data['used_date'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResponseMarkUseMultipleSchemaDataInnerRedemptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResponseMarkUseMultipleSchemaDataInnerRedemptions</code>.
     */
    static validateJSON(data) {
        if (data['redeem_sku_codes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['redeem_sku_codes'])) {
                throw new Error("Expected the field `redeem_sku_codes` to be an array in the JSON data but got " + data['redeem_sku_codes']);
            }
            // validate the optional field `redeem_sku_codes` (array)
            for (const item of data['redeem_sku_codes']) {
                ResponseCheckMultipleSchemaDataInnerRedemptionsRedeemSkuCodesInner.validateJSON(item);
            };
        }
        // validate the optional field `used_store`
        if (data['used_store']) { // data not null
          ResponseCheckMultipleSchemaDataInnerRedemptionsUsedStore.validateJSON(data['used_store']);
        }
        // ensure the json data is a string
        if (data['used_date'] && !(typeof data['used_date'] === 'string' || data['used_date'] instanceof String)) {
            throw new Error("Expected the field `used_date` to be a primitive type in the JSON string but got " + data['used_date']);
        }

        return true;
    }


}



/**
 * Contains redeemed SKU information of the voucher (for voucher type is conditional and support sku)
 * @member {Array.<module:model/ResponseCheckMultipleSchemaDataInnerRedemptionsRedeemSkuCodesInner>} redeem_sku_codes
 */
ResponseMarkUseMultipleSchemaDataInnerRedemptions.prototype['redeem_sku_codes'] = undefined;

/**
 * Actual redemption value of voucher type = conditional
 * @member {Number} redemption_value
 */
ResponseMarkUseMultipleSchemaDataInnerRedemptions.prototype['redemption_value'] = undefined;

/**
 * @member {module:model/ResponseCheckMultipleSchemaDataInnerRedemptionsUsedStore} used_store
 */
ResponseMarkUseMultipleSchemaDataInnerRedemptions.prototype['used_store'] = undefined;

/**
 * Date voucher marked as used in case the voucher has been redeemed. Format (YYYY-MM-DD HH:MM:SS)
 * @member {String} used_date
 */
ResponseMarkUseMultipleSchemaDataInnerRedemptions.prototype['used_date'] = undefined;






export default ResponseMarkUseMultipleSchemaDataInnerRedemptions;


/**
 * Merchant APIs
 * Technical document APIs for Merchant APIs
 *
 * The version of the OpenAPI document: 6.0
 * Contact: duong.vu@gotit.vn
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ResponseCheckMultipleSchemaV60DataInnerProduct from './ResponseCheckMultipleSchemaV60DataInnerProduct';
import ResponseCheckMultipleSchemaV60DataInnerRedeemSku from './ResponseCheckMultipleSchemaV60DataInnerRedeemSku';
import ResponseMarkUseMultipleSchemaV60DataInnerUsedStore from './ResponseMarkUseMultipleSchemaV60DataInnerUsedStore';

/**
 * The ResponseMarkUseMultipleSchemaV60DataInner model module.
 * @module model/ResponseMarkUseMultipleSchemaV60DataInner
 * @version 6.0
 */
class ResponseMarkUseMultipleSchemaV60DataInner {
    /**
     * Constructs a new <code>ResponseMarkUseMultipleSchemaV60DataInner</code>.
     * @alias module:model/ResponseMarkUseMultipleSchemaV60DataInner
     */
    constructor() { 
        
        ResponseMarkUseMultipleSchemaV60DataInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResponseMarkUseMultipleSchemaV60DataInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResponseMarkUseMultipleSchemaV60DataInner} obj Optional instance to populate.
     * @return {module:model/ResponseMarkUseMultipleSchemaV60DataInner} The populated <code>ResponseMarkUseMultipleSchemaV60DataInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResponseMarkUseMultipleSchemaV60DataInner();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = ResponseCheckMultipleSchemaV60DataInnerProduct.constructFromObject(data['product']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'Number');
            }
            if (data.hasOwnProperty('used_date')) {
                obj['used_date'] = ApiClient.convertToType(data['used_date'], 'String');
            }
            if (data.hasOwnProperty('used_store')) {
                obj['used_store'] = ResponseMarkUseMultipleSchemaV60DataInnerUsedStore.constructFromObject(data['used_store']);
            }
            if (data.hasOwnProperty('voucher_type')) {
                obj['voucher_type'] = ApiClient.convertToType(data['voucher_type'], 'String');
            }
            if (data.hasOwnProperty('skus_condition_vi')) {
                obj['skus_condition_vi'] = ApiClient.convertToType(data['skus_condition_vi'], 'String');
            }
            if (data.hasOwnProperty('skus_condition_en')) {
                obj['skus_condition_en'] = ApiClient.convertToType(data['skus_condition_en'], 'String');
            }
            if (data.hasOwnProperty('redeem_sku')) {
                obj['redeem_sku'] = ResponseCheckMultipleSchemaV60DataInnerRedeemSku.constructFromObject(data['redeem_sku']);
            }
            if (data.hasOwnProperty('redeemable_skus')) {
                obj['redeemable_skus'] = ApiClient.convertToType(data['redeemable_skus'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResponseMarkUseMultipleSchemaV60DataInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResponseMarkUseMultipleSchemaV60DataInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // validate the optional field `product`
        if (data['product']) { // data not null
          ResponseCheckMultipleSchemaV60DataInnerProduct.validateJSON(data['product']);
        }
        // ensure the json data is a string
        if (data['used_date'] && !(typeof data['used_date'] === 'string' || data['used_date'] instanceof String)) {
            throw new Error("Expected the field `used_date` to be a primitive type in the JSON string but got " + data['used_date']);
        }
        // validate the optional field `used_store`
        if (data['used_store']) { // data not null
          ResponseMarkUseMultipleSchemaV60DataInnerUsedStore.validateJSON(data['used_store']);
        }
        // ensure the json data is a string
        if (data['voucher_type'] && !(typeof data['voucher_type'] === 'string' || data['voucher_type'] instanceof String)) {
            throw new Error("Expected the field `voucher_type` to be a primitive type in the JSON string but got " + data['voucher_type']);
        }
        // ensure the json data is a string
        if (data['skus_condition_vi'] && !(typeof data['skus_condition_vi'] === 'string' || data['skus_condition_vi'] instanceof String)) {
            throw new Error("Expected the field `skus_condition_vi` to be a primitive type in the JSON string but got " + data['skus_condition_vi']);
        }
        // ensure the json data is a string
        if (data['skus_condition_en'] && !(typeof data['skus_condition_en'] === 'string' || data['skus_condition_en'] instanceof String)) {
            throw new Error("Expected the field `skus_condition_en` to be a primitive type in the JSON string but got " + data['skus_condition_en']);
        }
        // validate the optional field `redeem_sku`
        if (data['redeem_sku']) { // data not null
          ResponseCheckMultipleSchemaV60DataInnerRedeemSku.validateJSON(data['redeem_sku']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['redeemable_skus'])) {
            throw new Error("Expected the field `redeemable_skus` to be an array in the JSON data but got " + data['redeemable_skus']);
        }

        return true;
    }


}



/**
 * Voucher code
 * @member {String} code
 */
ResponseMarkUseMultipleSchemaV60DataInner.prototype['code'] = undefined;

/**
 * @member {module:model/ResponseCheckMultipleSchemaV60DataInnerProduct} product
 */
ResponseMarkUseMultipleSchemaV60DataInner.prototype['product'] = undefined;

/**
 * State of voucher
 * @member {Number} state
 */
ResponseMarkUseMultipleSchemaV60DataInner.prototype['state'] = undefined;

/**
 * Date voucher marked as used in case the voucher has been redeemed. Format (YYYY-MM-DD HH:MM:SS)
 * @member {String} used_date
 */
ResponseMarkUseMultipleSchemaV60DataInner.prototype['used_date'] = undefined;

/**
 * @member {module:model/ResponseMarkUseMultipleSchemaV60DataInnerUsedStore} used_store
 */
ResponseMarkUseMultipleSchemaV60DataInner.prototype['used_store'] = undefined;

/**
 * Voucher type, standard or redeemable_sku
 * @member {String} voucher_type
 */
ResponseMarkUseMultipleSchemaV60DataInner.prototype['voucher_type'] = undefined;

/**
 * Voucher SKU terms and conditions description in Vietnamese
 * @member {String} skus_condition_vi
 */
ResponseMarkUseMultipleSchemaV60DataInner.prototype['skus_condition_vi'] = undefined;

/**
 * Voucher SKU terms and conditions description in English
 * @member {String} skus_condition_en
 */
ResponseMarkUseMultipleSchemaV60DataInner.prototype['skus_condition_en'] = undefined;

/**
 * @member {module:model/ResponseCheckMultipleSchemaV60DataInnerRedeemSku} redeem_sku
 */
ResponseMarkUseMultipleSchemaV60DataInner.prototype['redeem_sku'] = undefined;

/**
 * List of redeemable SKUs of the voucher code. For voucher type = redeemable_sku, bill number must contain at least 1 redeemable SKU of the voucher.
 * @member {Array.<String>} redeemable_skus
 */
ResponseMarkUseMultipleSchemaV60DataInner.prototype['redeemable_skus'] = undefined;






export default ResponseMarkUseMultipleSchemaV60DataInner;


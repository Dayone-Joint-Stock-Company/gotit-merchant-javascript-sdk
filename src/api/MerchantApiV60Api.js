/**
 * Merchant APIs
 * Technical document APIs for Merchant APIs
 *
 * The version of the OpenAPI document: 6.0
 * Contact: duong.vu@gotit.vn
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RequestCheckMultipleBodySchemaV60 from '../model/RequestCheckMultipleBodySchemaV60';
import RequestMarkUseMultipleBodySchemaV60 from '../model/RequestMarkUseMultipleBodySchemaV60';
import RequestReservedBodySchemaV60 from '../model/RequestReservedBodySchemaV60';
import RequestUnReservedBodySchemaV60 from '../model/RequestUnReservedBodySchemaV60';
import ResponseCheckMultipleSchemaV60 from '../model/ResponseCheckMultipleSchemaV60';
import ResponseMarkUseMultipleSchemaV60 from '../model/ResponseMarkUseMultipleSchemaV60';
import ResponseReservedSchemaV60 from '../model/ResponseReservedSchemaV60';
import ResponseUnReservedSchemaV60 from '../model/ResponseUnReservedSchemaV60';

/**
* MerchantApiV60 service.
* @module api/MerchantApiV60Api
* @version 6.0
*/
export default class MerchantApiV60Api {

    /**
    * Constructs a new MerchantApiV60Api. 
    * @alias module:api/MerchantApiV60Api
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the checkMultiple operation.
     * @callback module:api/MerchantApiV60Api~checkMultipleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResponseCheckMultipleSchemaV60} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Check multiple vouchers are valid or not
     * Check multiple vouchers are valid or not
     * @param {Object} opts Optional parameters
     * @param {module:model/RequestCheckMultipleBodySchemaV60} [requestCheckMultipleBodySchemaV60] 
     * @param {module:api/MerchantApiV60Api~checkMultipleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResponseCheckMultipleSchemaV60}
     */
    checkMultiple(opts, callback) {
      opts = opts || {};
      let postBody = opts['requestCheckMultipleBodySchemaV60'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ResponseCheckMultipleSchemaV60;
      return this.apiClient.callApi(
        '/merchant/v6.0/checkmultiple', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reserved operation.
     * @callback module:api/MerchantApiV60Api~reservedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResponseReservedSchemaV60} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reserved multiple vouchers for a fixed bill number.
     * Reserved multiple vouchers for a fixed bill number.
     * @param {Object} opts Optional parameters
     * @param {module:model/RequestReservedBodySchemaV60} [requestReservedBodySchemaV60] 
     * @param {module:api/MerchantApiV60Api~reservedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResponseReservedSchemaV60}
     */
    reserved(opts, callback) {
      opts = opts || {};
      let postBody = opts['requestReservedBodySchemaV60'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ResponseReservedSchemaV60;
      return this.apiClient.callApi(
        '/merchant/v6.0/reserved', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the unreserved operation.
     * @callback module:api/MerchantApiV60Api~unreservedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResponseUnReservedSchemaV60} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reserved multiple vouchers for a fixed bill number.
     * Reserved multiple vouchers for a fixed bill number.
     * @param {Object} opts Optional parameters
     * @param {module:model/RequestUnReservedBodySchemaV60} [requestUnReservedBodySchemaV60] 
     * @param {module:api/MerchantApiV60Api~unreservedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResponseUnReservedSchemaV60}
     */
    unreserved(opts, callback) {
      opts = opts || {};
      let postBody = opts['requestUnReservedBodySchemaV60'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ResponseUnReservedSchemaV60;
      return this.apiClient.callApi(
        '/merchant/v6.0/unreserved', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the useMultiple operation.
     * @callback module:api/MerchantApiV60Api~useMultipleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResponseMarkUseMultipleSchemaV60} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reserved multiple vouchers for a fixed bill number.
     * Reserved multiple vouchers for a fixed bill number.
     * @param {Object} opts Optional parameters
     * @param {module:model/RequestMarkUseMultipleBodySchemaV60} [requestMarkUseMultipleBodySchemaV60] 
     * @param {module:api/MerchantApiV60Api~useMultipleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResponseMarkUseMultipleSchemaV60}
     */
    useMultiple(opts, callback) {
      opts = opts || {};
      let postBody = opts['requestMarkUseMultipleBodySchemaV60'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ResponseMarkUseMultipleSchemaV60;
      return this.apiClient.callApi(
        '/merchant/v6.0/usemultiple', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
